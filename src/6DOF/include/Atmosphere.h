#pragma once

#include <array>
#include <cmath>
#include <vector>

struct Air {
    static constexpr double GAMMA = 1.4;
    static constexpr double R_GAS = 8.31446261815324;
    static constexpr double R_DRY_AIR = 287.058;
    static constexpr double DRY_MW = 0.028964399592254;

    union {
        double data[12];
        double pressure;
        double density;
        double speed_of_sound;
        double temperature;
        double dynamic_viscosity;
        double gamma;
        double molecular_weight;
        double specific_gas_constant;
        double absolute_viscosity;
        double cp;
        double cv;
    };

    double wind[3]; // East North Up velocity

};

class Atmosphere {

public:

    Air air;

    double max_height;

    /**
    * returns false if air was computed
    */
    virtual bool get_air(const std::array<double,3>& LLA, double time) = 0;

    Atmosphere(){}
    virtual ~Atmosphere(){}

};

class AtmosphereBasic : public Atmosphere {
    const double scale_height;
    const double sea_pressure;
    const double sea_density;
    const double sea_temp;
    const double R_gas;
public:
    AtmosphereBasic() : scale_height(8.4), sea_pressure(101325), sea_density(1.22), sea_temp(297), R_gas(Air::R_DRY_AIR)  {}

    bool get_air(const std::array<double,3>& LLA, double time) override;
};

class AtmosphereTable : public Atmosphere {

    int idx;

    std::vector< double > altitudes;

    std::vector< std::array< double, 5 > > data;

    std::vector< std::array< double, 5 > > delta;

public:

    AtmosphereTable(){}

    void load(const std::vector<double>& Alt, const std::vector< std::array< double, 5 > >& Data);

    void load(const char* fn);

    void add(double alt, const std::array< double, 5 >& values);

    bool get_air(const std::array<double,3>& LLA, double time) override;

};

class AtmosphereUS1976 : public Atmosphere {


public:

    //pressure(Pa), density (kg/m3), speed_sound (m/s), temp (K), dynamic viscosity (Pa s)
    static constexpr double data[87][5] = {{101325.0,1.225,340.294,288.15,1.81206e-05},
{89874.6,1.11164,336.434,281.65,1.77943e-05},
{79495.2,1.00649,332.529,275.15,1.74645e-05},
{70108.5,0.909122,328.578,268.65,1.71311e-05},
{61640.2,0.819129,324.579,262.15,1.6794e-05},
{54019.9,0.736116,320.529,255.65,1.64531e-05},
{47181.0,0.659697,316.428,249.15,1.61084e-05},
{41060.7,0.589501,312.274,242.65,1.57596e-05},
{35599.8,0.525168,308.063,236.15,1.54068e-05},
{30742.5,0.466348,303.793,229.65,1.50498e-05},
{26436.3,0.412707,299.463,223.15,1.46884e-05},
{22632.1,0.363918,295.07,216.65,1.43226e-05},
{19330.4,0.310828,295.07,216.65,1.43226e-05},
{16510.4,0.265483,295.07,216.65,1.43226e-05},
{14101.8,0.226753,295.07,216.65,1.43226e-05},
{12044.6,0.193674,295.07,216.65,1.43226e-05},
{10287.5,0.16542,295.07,216.65,1.43226e-05},
{8786.68,0.141288,295.07,216.65,1.43226e-05},
{7504.84,0.120676,295.07,216.65,1.43226e-05},
{6410.01,0.103071,295.07,216.65,1.43226e-05},
{5474.89,0.0880349,295.07,216.65,1.43226e-05},
{4677.89,0.0748737,295.75,217.65,1.43792e-05},
{3999.79,0.0637273,296.428,218.65,1.44357e-05},
{3422.43,0.0542803,297.105,219.65,1.4492e-05},
{2930.49,0.0462674,297.781,220.65,1.45483e-05},
{2511.02,0.0394658,298.455,221.65,1.46044e-05},
{2153.09,0.0336882,299.128,222.65,1.46604e-05},
{1847.46,0.0287769,299.799,223.65,1.47164e-05},
{1586.29,0.0245988,300.468,224.65,1.47722e-05},
{1362.96,0.021042,301.136,225.65,1.48279e-05},
{1171.87,0.0180119,301.803,226.65,1.48835e-05},
{1008.23,0.0154288,302.468,227.65,1.4939e-05},
{868.019,0.013225,303.131,228.65,1.49945e-05},
{748.228,0.011262,304.982,231.45,1.51491e-05},
{646.122,0.00960889,306.821,234.25,1.53029e-05},
{558.924,0.00821392,308.649,237.05,1.54559e-05},
{484.317,0.00703441,310.467,239.85,1.56082e-05},
{420.367,0.00603513,312.274,242.65,1.57596e-05},
{365.455,0.00518691,314.07,245.45,1.59104e-05},
{318.22,0.00446557,315.856,248.25,1.60603e-05},
{277.522,0.00385101,317.633,251.05,1.62096e-05},
{242.395,0.00332648,319.399,253.85,1.63581e-05},
{212.03,0.00287802,321.156,256.65,1.65058e-05},
{185.738,0.00249393,322.903,259.45,1.66529e-05},
{162.937,0.00216443,324.641,262.25,1.67992e-05},
{143.135,0.00188129,326.369,265.05,1.69449e-05},
{125.91,0.0016376,328.088,267.85,1.70898e-05},
{110.906,0.00142753,329.799,270.65,1.72341e-05},
{97.7545,0.00125825,329.799,270.65,1.72341e-05},
{86.1623,0.00110904,329.799,270.65,1.72341e-05},
{75.9448,0.000977525,329.799,270.65,1.72341e-05},
{66.9389,0.000861606,329.799,270.65,1.72341e-05},
{58.9622,0.000766867,328.088,267.85,1.70898e-05},
{51.8668,0.00068171,326.369,265.05,1.69449e-05},
{45.5632,0.000605252,324.641,262.25,1.67992e-05},
{39.97,0.000536684,322.903,259.45,1.66529e-05},
{35.0137,0.000475263,321.156,256.65,1.65058e-05},
{30.6274,0.000420311,319.399,253.85,1.63581e-05},
{26.7509,0.000371207,317.633,251.05,1.62096e-05},
{23.3296,0.000327382,315.856,248.25,1.60603e-05},
{20.3143,0.000288321,314.07,245.45,1.59104e-05},
{17.6606,0.00025355,312.274,242.65,1.57596e-05},
{15.3287,0.00022264,310.467,239.85,1.56082e-05},
{13.2826,0.0001952,308.649,237.05,1.54559e-05},
{11.49,0.000170875,306.821,234.25,1.53029e-05},
{9.92203,0.000149342,304.982,231.45,1.51491e-05},
{8.55275,0.000130308,303.131,228.65,1.49945e-05},
{7.35895,0.00011351,301.269,225.85,1.4839e-05},
{6.31992,9.87069e-05,299.396,223.05,1.46828e-05},
{5.41717,8.5683e-05,297.511,220.25,1.45258e-05},
{4.63422,7.4243e-05,295.614,217.45,1.43679e-05},
{3.95642,6.4211e-05,293.704,214.65,1.42092e-05},
{3.37176,5.5237e-05,292.333,212.65,1.40953e-05},
{2.86917,4.74496e-05,290.955,210.65,1.3981e-05},
{2.43773,4.0701e-05,289.57,208.65,1.38662e-05},
{2.06792,3.48607e-05,288.179,206.65,1.3751e-05},
{1.7514,2.98135e-05,286.781,204.65,1.36353e-05},
{1.48092,2.54579e-05,285.377,202.65,1.35192e-05},
{1.25012,2.17046e-05,283.965,200.65,1.34027e-05},
{1.05351,1.84751e-05,282.546,198.65,1.32856e-05},
{0.88628,1.57005e-05,281.12,196.65,1.31682e-05},
{0.74428,1.33205e-05,279.687,194.65,1.30502e-05},
{0.623905,1.1282e-05,278.246,192.65,1.29318e-05},
{0.522037,9.53899e-06,276.798,190.65,1.28129e-05},
{0.435981,8.05098e-06,275.343,188.65,1.26935e-05},
{0.36342,6.77222e-06,274.096,186.946,1.25915e-05},
{0.302723,5.64114e-06,274.096,186.946,1.25915e-05}};

    static constexpr double delta[86][5] = {{-1.1450e+04,-1.1336e-01,-3.8600e+00,-6.5000e+00,-3.2630e-07},
{-1.0379e+04,-1.0515e-01,-3.9050e+00,-6.5000e+00,-3.2980e-07},
{-9.3867e+03,-9.7368e-02,-3.9510e+00,-6.5000e+00,-3.3340e-07},
{-8.4683e+03,-8.9993e-02,-3.9990e+00,-6.5000e+00,-3.3710e-07},
{-7.6203e+03,-8.3013e-02,-4.0500e+00,-6.5000e+00,-3.4090e-07},
{-6.8389e+03,-7.6419e-02,-4.1010e+00,-6.5000e+00,-3.4470e-07},
{-6.1203e+03,-7.0196e-02,-4.1540e+00,-6.5000e+00,-3.4880e-07},
{-5.4609e+03,-6.4333e-02,-4.2110e+00,-6.5000e+00,-3.5280e-07},
{-4.8573e+03,-5.8820e-02,-4.2700e+00,-6.5000e+00,-3.5700e-07},
{-4.3062e+03,-5.3641e-02,-4.3300e+00,-6.5000e+00,-3.6140e-07},
{-3.8042e+03,-4.8789e-02,-4.3930e+00,-6.5000e+00,-3.6580e-07},
{-3.3017e+03,-5.3090e-02,0.0000e+00,0.0000e+00,0.0000e+00},
{-2.8200e+03,-4.5345e-02,0.0000e+00,0.0000e+00,0.0000e+00},
{-2.4086e+03,-3.8730e-02,0.0000e+00,0.0000e+00,0.0000e+00},
{-2.0572e+03,-3.3079e-02,0.0000e+00,0.0000e+00,0.0000e+00},
{-1.7571e+03,-2.8254e-02,0.0000e+00,0.0000e+00,0.0000e+00},
{-1.5008e+03,-2.4132e-02,0.0000e+00,0.0000e+00,0.0000e+00},
{-1.2818e+03,-2.0612e-02,0.0000e+00,0.0000e+00,0.0000e+00},
{-1.0948e+03,-1.7605e-02,0.0000e+00,0.0000e+00,0.0000e+00},
{-9.3512e+02,-1.5036e-02,0.0000e+00,0.0000e+00,0.0000e+00},
{-7.9700e+02,-1.3161e-02,6.8000e-01,1.0000e+00,5.6600e-08},
{-6.7810e+02,-1.1146e-02,6.7800e-01,1.0000e+00,5.6500e-08},
{-5.7736e+02,-9.4470e-03,6.7700e-01,1.0000e+00,5.6300e-08},
{-4.9194e+02,-8.0129e-03,6.7600e-01,1.0000e+00,5.6300e-08},
{-4.1947e+02,-6.8016e-03,6.7400e-01,1.0000e+00,5.6100e-08},
{-3.5793e+02,-5.7776e-03,6.7300e-01,1.0000e+00,5.6000e-08},
{-3.0563e+02,-4.9113e-03,6.7100e-01,1.0000e+00,5.6000e-08},
{-2.6117e+02,-4.1781e-03,6.6900e-01,1.0000e+00,5.5800e-08},
{-2.2333e+02,-3.5568e-03,6.6800e-01,1.0000e+00,5.5700e-08},
{-1.9109e+02,-3.0301e-03,6.6700e-01,1.0000e+00,5.5600e-08},
{-1.6364e+02,-2.5831e-03,6.6500e-01,1.0000e+00,5.5500e-08},
{-1.4021e+02,-2.2038e-03,6.6300e-01,1.0000e+00,5.5500e-08},
{-1.1979e+02,-1.9630e-03,1.8510e+00,2.8000e+00,1.5460e-07},
{-1.0211e+02,-1.6531e-03,1.8390e+00,2.8000e+00,1.5380e-07},
{-8.7198e+01,-1.3950e-03,1.8280e+00,2.8000e+00,1.5300e-07},
{-7.4607e+01,-1.1795e-03,1.8180e+00,2.8000e+00,1.5230e-07},
{-6.3950e+01,-9.9928e-04,1.8070e+00,2.8000e+00,1.5140e-07},
{-5.4912e+01,-8.4822e-04,1.7960e+00,2.8000e+00,1.5080e-07},
{-4.7235e+01,-7.2134e-04,1.7860e+00,2.8000e+00,1.4990e-07},
{-4.0698e+01,-6.1456e-04,1.7770e+00,2.8000e+00,1.4930e-07},
{-3.5127e+01,-5.2453e-04,1.7660e+00,2.8000e+00,1.4850e-07},
{-3.0365e+01,-4.4846e-04,1.7570e+00,2.8000e+00,1.4770e-07},
{-2.6292e+01,-3.8409e-04,1.7470e+00,2.8000e+00,1.4710e-07},
{-2.2801e+01,-3.2950e-04,1.7380e+00,2.8000e+00,1.4630e-07},
{-1.9802e+01,-2.8314e-04,1.7280e+00,2.8000e+00,1.4570e-07},
{-1.7225e+01,-2.4369e-04,1.7190e+00,2.8000e+00,1.4490e-07},
{-1.5004e+01,-2.1007e-04,1.7110e+00,2.8000e+00,1.4430e-07},
{-1.3152e+01,-1.6928e-04,0.0000e+00,0.0000e+00,0.0000e+00},
{-1.1592e+01,-1.4921e-04,0.0000e+00,0.0000e+00,0.0000e+00},
{-1.0218e+01,-1.3152e-04,0.0000e+00,0.0000e+00,0.0000e+00},
{-9.0059e+00,-1.1592e-04,0.0000e+00,0.0000e+00,0.0000e+00},
{-7.9767e+00,-9.4739e-05,-1.7110e+00,-2.8000e+00,-1.4430e-07},
{-7.0954e+00,-8.5157e-05,-1.7190e+00,-2.8000e+00,-1.4490e-07},
{-6.3036e+00,-7.6458e-05,-1.7280e+00,-2.8000e+00,-1.4570e-07},
{-5.5932e+00,-6.8568e-05,-1.7380e+00,-2.8000e+00,-1.4630e-07},
{-4.9563e+00,-6.1421e-05,-1.7470e+00,-2.8000e+00,-1.4710e-07},
{-4.3863e+00,-5.4952e-05,-1.7570e+00,-2.8000e+00,-1.4770e-07},
{-3.8765e+00,-4.9104e-05,-1.7660e+00,-2.8000e+00,-1.4850e-07},
{-3.4213e+00,-4.3825e-05,-1.7770e+00,-2.8000e+00,-1.4930e-07},
{-3.0153e+00,-3.9061e-05,-1.7860e+00,-2.8000e+00,-1.4990e-07},
{-2.6537e+00,-3.4771e-05,-1.7960e+00,-2.8000e+00,-1.5080e-07},
{-2.3319e+00,-3.0910e-05,-1.8070e+00,-2.8000e+00,-1.5140e-07},
{-2.0461e+00,-2.7440e-05,-1.8180e+00,-2.8000e+00,-1.5230e-07},
{-1.7926e+00,-2.4325e-05,-1.8280e+00,-2.8000e+00,-1.5300e-07},
{-1.5680e+00,-2.1533e-05,-1.8390e+00,-2.8000e+00,-1.5380e-07},
{-1.3693e+00,-1.9034e-05,-1.8510e+00,-2.8000e+00,-1.5460e-07},
{-1.1938e+00,-1.6798e-05,-1.8620e+00,-2.8000e+00,-1.5550e-07},
{-1.0390e+00,-1.4803e-05,-1.8730e+00,-2.8000e+00,-1.5620e-07},
{-9.0275e-01,-1.3024e-05,-1.8850e+00,-2.8000e+00,-1.5700e-07},
{-7.8295e-01,-1.1440e-05,-1.8970e+00,-2.8000e+00,-1.5790e-07},
{-6.7780e-01,-1.0032e-05,-1.9100e+00,-2.8000e+00,-1.5870e-07},
{-5.8466e-01,-8.9740e-06,-1.3710e+00,-2.0000e+00,-1.1390e-07},
{-5.0259e-01,-7.7874e-06,-1.3780e+00,-2.0000e+00,-1.1430e-07},
{-4.3144e-01,-6.7486e-06,-1.3850e+00,-2.0000e+00,-1.1480e-07},
{-3.6981e-01,-5.8403e-06,-1.3910e+00,-2.0000e+00,-1.1520e-07},
{-3.1652e-01,-5.0472e-06,-1.3980e+00,-2.0000e+00,-1.1570e-07},
{-2.7048e-01,-4.3556e-06,-1.4040e+00,-2.0000e+00,-1.1610e-07},
{-2.3080e-01,-3.7533e-06,-1.4120e+00,-2.0000e+00,-1.1650e-07},
{-1.9661e-01,-3.2295e-06,-1.4190e+00,-2.0000e+00,-1.1710e-07},
{-1.6723e-01,-2.7746e-06,-1.4260e+00,-2.0000e+00,-1.1740e-07},
{-1.4200e-01,-2.3800e-06,-1.4330e+00,-2.0000e+00,-1.1800e-07},
{-1.2038e-01,-2.0385e-06,-1.4410e+00,-2.0000e+00,-1.1840e-07},
{-1.0187e-01,-1.7430e-06,-1.4480e+00,-2.0000e+00,-1.1890e-07},
{-8.6056e-02,-1.4880e-06,-1.4550e+00,-2.0000e+00,-1.1940e-07},
{-7.2561e-02,-1.2788e-06,-1.2470e+00,-1.7040e+00,-1.0200e-07},
{-6.0697e-02,-1.1311e-06,0.0000e+00,0.0000e+00,0.0000e+00}};


    AtmosphereUS1976() {}

    bool get_air(const std::array<double,3>& LLA, double time) override;

};






